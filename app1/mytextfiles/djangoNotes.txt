# settings.py
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


Place your image files in a folder within your project directory.
By convention, you can create a folder named static within your app's directory and put your images there.
For example, if you have an app called "myapp," you can create a folder structure like this:
myapp/
    static/
        myapp/
            images/
                my_image.jpg


Here's an example of how to do this in your template:
{% load static %}

<!DOCTYPE html>
<html>
<head>
    <title>Image Display</title>
</head>
<body>
    <h1>Image Example</h1>

    <!-- Replace 'my_image.jpg' with the actual path to your image file -->
    <img src="{% static 'myapp/images/my_image.jpg' %}" alt="My Image">
</body>
</html>



pip install Flask

#app.py
from flask import Flask, render_template
import subprocess

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/run_process')
def run_process():
    process = subprocess.Popen(['your_command_here'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
    output, error = process.communicate()
    return output.decode('utf-8')

if __name__ == '__main__':
    app.run(debug=True)

#index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Progress Bar Demo</title>
    <style>
        #progress-bar {
            width: 0%;
            height: 30px;
            background-color: #4CAF50;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <button onclick="runProcess()">Run Process</button>
    <div id="progress-bar"></div>

    <script>
        function runProcess() {
            var progressBar = document.getElementById('progress-bar');
            var xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    // Process completed
                    alert('Process completed!');
                }
            };

            xhr.upload.onprogress = function(event) {
                if (event.lengthComputable) {
                    var percentComplete = (event.loaded / event.total) * 100;
                    progressBar.style.width = percentComplete + '%';
                }
            };

            xhr.open('GET', '/run_process', true);
            xhr.send();
        }
    </script>
</body>
</html>


python app.py

